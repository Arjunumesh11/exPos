//exit ysytem call
alias current_pid R0;
alias current_process R1;



current_pid = [SYSTEM_STATUS_TABLE + 1];
current_process = PROCESS_TABLE + current_pid * 16;
[PROCESS_TABLE + 16*current_pid +9 ] = INT_EXIT;
alias userSP R2;
userSP = SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
//calling exit process
multipush(R0,R1,R2);
    R1 = EXIT_PROCESS;
    R2 = current_pid;
    call PROCESS_MANAGER;
multipop(R0,R1,R2);
[current_process + 4 ] = TERMINATED;

alias process_itr R2;
alias flag R3;
process_itr = 1;
flag  = 0;
while (process_itr <= 15 ) do
    if ([PROCESS_TABLE + process_itr*16 + 4 ] != TERMINATED) then
     flag = 1;
      break;   
    endif;
    process_itr = process_itr + 1;    
endwhile;
if (flag == 1) then
    call SCHEDULER;
endif;
halt;
