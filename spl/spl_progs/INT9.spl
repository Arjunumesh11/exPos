//INT 9
//EXEC

alias userSP R0;
alias current_pid R1;
alias process_table R2;

userSP=SP;
current_pid = [SYSTEM_STATUS_TABLE + 1];
process_table = PROCESS_TABLE + 16*current_pid;
//setting mod to 9 systemcall no
[process_table + 9] = 9;

[process_table + 13] = SP;
SP = [process_table + 11]*512 - 1;

alias filename R3;
filename=[[PTBR + 2*(userSP - 4)/512]*512 + (userSP-4)%512];

alias inode_itr R4;
inode_itr = 1;
while (inode_itr<MAX_FILE_NUM) do
    if([INODE_TABLE + 16*inode_itr + 1] == filename) then
        if([INODE_TABLE + 16*inode_itr]!=EXEC) then
            inode_itr = MAX_FILE_NUM;
        endif;
        break;
    endif;
    inode_itr = inode_itr + 1;
endwhile;
//could not find the file
if(inode_itr==MAX_FILE_NUM) then
    //setting return value to -1
    [PTBR + 2*(userSP - 1)/512]*512 + (userSP-1)%512] = -1;
else    
    multipush(R1,R2,R3,R4);
    alias PID R1;
    PID = current_pid;
    call PROCESS_MANAGER;
    multipop(R1,R2,R3,R4);
endif;
[process_table +9] = 0;
SP = [process_table + 13];
ireturn;